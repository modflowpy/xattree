name: Release
on:
  push:
    branches:
      - master
      - v[0-9]+.[0-9]+.[0-9]+*
  release:
    types:
      - published
jobs:
  prep:
    name: Prepare release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref_name != 'master' }}
    permissions:
      contents: write
      pull-requests: write
    defaults:
      run:
        shell: bash
    steps:

      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: 'pip'
          cache-dependency-path: pyproject.toml

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install build twine
          pip install .
          pip install ".[lint, test]"

      - name: Update version
        id: version
        run: |
          ref="${{ github.ref_name }}"
          version="${ref#"v"}"
          python scripts/update_version.py -v "$version"
          python -c "import xattree; print('Version: ', xattree.__version__)"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Push release branch
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          ver="${{ steps.version.outputs.version }}"
          
          # commit and push changes
          git config core.sharedRepository true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "ci(release): set version to ${{ steps.version.outputs.version }}"
          git push origin "${{ github.ref_name }}"

          title="Release $ver"
          body='
          # Release '$ver'
          
          The release can be approved by merging this pull request into `master`. This will trigger a job to publish the release to PyPI.
          '
          gh pr create -B "master" -H "${{ github.ref_name }}" --title "$title" --draft --body "$body"

  release:
    name: Draft release
    # runs only when changes are merged to master
    if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Draft release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          version=$(cat version.txt)
          title="xattree $version"
          gh release create "$version" \
            --target master \
            --title "$title" \
            --draft \
            --latest

  publish:
    name: Publish package
    # runs only after release is published (manually promoted from draft)
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
      id-token: write  # mandatory for trusted publishing
    environment:  # requires a 'release' environment in repo settings
      name: release
      url: https://pypi.org/p/xattree
    steps:

      - name: Checkout master branch
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install build twine
          pip install .

      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check --strict dist/*

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
